{"remainingRequest":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eruda/Documents/GitHub/project_yggdrasill/ui/src/components/AddTemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/src/components/AddTemplate.vue","mtime":1620638042000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEcmF3Rm9yY2UgZnJvbSAiQC9wbHVnaW5zL2RyYXdGb3JjZSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBJbnB1dFByb3AgZnJvbSAiLi9JbnB1dFByb3AiOwoKbGV0IHRpbWVyOwpsZXQgaWQgPSAxOwpsZXQgY29sb3JpID0gMDsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBZGRUZW1wbGF0ZSIsCiAgaW5qZWN0OiBbInJlbG9hZCJdLAogIGNvbXBvbmVudHM6IHsgSW5wdXRQcm9wIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICB2aXNpYmxlMjogZmFsc2UsCiAgICAgIG5vZGVzOiBbXSwKICAgICAgbGlua3M6IFtdLAogICAgICB0ZW1wTGlua3M6IFtdLAogICAgICBwcmVkZWZpbmVDb2xvcnM6IFsKICAgICAgICAiI2ZmY2YzYyIsCiAgICAgICAgIiNjOTkwYzAiLAogICAgICAgICIjZjc5NzY3IiwKICAgICAgICAiIzU3YzdlMyIsCiAgICAgICAgIiNmMTY2NjciLAogICAgICAgICIjZDljOGFlIiwKICAgICAgICAiIzhkY2M5MyIsCiAgICAgICAgIiNlY2I1YzkiLAogICAgICAgICIjNGM4ZWRhIiwKICAgICAgICAiI2ZmYzQ1NCIsCiAgICAgICAgIiNkYTcxOTQiLAogICAgICAgICIjNTY5NDgwIiwKICAgICAgXSwKICAgICAgdGFnZm9ybTogewogICAgICAgIGlkOiBudWxsLAogICAgICAgIHByb3BlcnRpZXM6IHt9LAogICAgICAgIHNpemU6ICIiLAogICAgICAgIGZpbGw6ICIiLAogICAgICAgIHN0cm9rZTogIiIsCiAgICAgICAgdHlwZTogIiIsCiAgICAgIH0sCiAgICAgIHRhZ1J1bGVzOiB7CiAgICAgICAgdHlwZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXoioLngrnlkI0iLCB0cmlnZ2VyOiAiYmx1ciIgfV0sCiAgICAgICAgZmlsbDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+mAieaLqeS4gOS4quWhq+WFheminOiJsiIsIHRyaWdnZXI6ICJjaGFuZ2UiIH0sCiAgICAgICAgXSwKICAgICAgICBzdHJva2U6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fpgInmi6nkuIDkuKrmj4/ovrnpopzoibIiLCB0cmlnZ2VyOiAiY2hhbmdlIiB9LAogICAgICAgIF0sCiAgICAgIH0sCiAgICAgIHN2Z0ZvY3VzOiBmYWxzZSwKICAgICAgZDogbnVsbCwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgdGFncyAoKSB7CiAgICAgIGxldCBhcnIgPSBbXQogICAgICBsZXQgdHlwZUFyciA9IFtdCiAgICAgIGlmICh0aGlzLm5vZGVzKSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBjb25zdCBpdCA9IHRoaXMubm9kZXNbaV07CiAgICAgICAgICBpZiAoIXR5cGVBcnIuaW5jbHVkZXMoaXQudHlwZSkpIHsKICAgICAgICAgICAgYXJyLnB1c2goaXQpCiAgICAgICAgICAgIHR5cGVBcnIucHVzaChpdC50eXBlKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gYXJyCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRQcmVkZWZpbmVDb2xvcnMoKSB7CiAgICAgIHJldHVybiB0aGlzLnByZWRlZmluZUNvbG9yc1tjb2xvcmkrK10KICAgIH0sCiAgICBvcGVuMShyb3cpIHsKICAgICAgcm93ID0gcm93IHx8IHt9OwogICAgICB0aGlzLnRhZ2Zvcm0gPSB7CiAgICAgICAgaWQ6IHJvdy5pZCB8fCBudWxsLAogICAgICAgIG5hbWU6IHJvdy5uYW1lIHx8ICIiLAogICAgICAgIHByb3BlcnRpZXM6IHJvdy5wcm9wZXJ0aWVzIHx8IHsgbmFtZTogIiIgfSwKICAgICAgICBzaXplOiByb3cuc2l6ZSB8fCAiIiwKICAgICAgICBmaWxsOiAocm93LnN0eWxlIHx8IHt9KS5maWxsIHx8IHRoaXMuZ2V0UHJlZGVmaW5lQ29sb3JzKCksCiAgICAgICAgc3Ryb2tlOiAocm93LnN0eWxlIHx8IHt9KS5zdHJva2UgfHwgIiNGRkZGRkYiLAogICAgICAgIHR5cGU6IHJvdy50eXBlIHx8ICIiLAogICAgICB9OwogICAgICBpZiAoY29sb3JpID49IHRoaXMucHJlZGVmaW5lQ29sb3JzLmxlbmd0aCkgY29sb3JpID0gMDsKICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBjbG9zZSgpIHsKICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgZGVsTm9kZSgpIHsKICAgICAgbGV0IGQgPSB0aGlzLnRhZ2Zvcm07CiAgICAgIHRoaXMuJGNvbmZpcm0oIuehruWumuWIoOmZpOiKgueCuSIgKyBkLm5hbWUgKyAi5ZKM55u45YWz6L+e57q/55qE5ZCX77yfIiwgIuaPkOekuiIsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogIuehruWumiIsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICB9KQogICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMubm9kZXMgPSB0aGlzLm5vZGVzLmZpbHRlcigodikgPT4gdi5pZCAhPSBkLmlkKTsKICAgICAgICAgIHRoaXMubGlua3MgPSB0aGlzLmxpbmtzLmZpbHRlcigodikgPT4gewogICAgICAgICAgICByZXR1cm4gdi50YXJnZXQgIT0gZC5pZCAmJiB2LnNvdXJjZSAhPSBkLmlkOwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLmNsb3NlKCk7CiAgICAgICAgICB0aGlzLnVwZGF0ZUQzKCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4ge30pOwogICAgfSwKICAgIG9rKCkgewogICAgICB0aGlzLiRyZWZzLnRhZ2Zvcm0udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBsZXQgZCA9IHRoaXMudGFnZm9ybTsKICAgICAgICAgIGlmICgvXlxkKy8udGVzdChkLnR5cGUpKSB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygi6IqC54K55ZCN5LiN6IO95Lul5pWw5a2X5Li65byA5aS0Iik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIGlmICh0aGlzLiRyZWZzLmlucHV0UHJvcC5lbWl0SW5wdXQoKSkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIGxldCBvYmpOYW1lID0gIiI7IC8vIOWchuWciOS4iuaYvuekuueahOWGheWuuQogICAgICAgICAgICBsZXQgcHJvcGVydGllcyA9IGQucHJvcGVydGllcyB8fCB7fTsKICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gcHJvcGVydGllcykgewogICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgIE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHByb3BlcnRpZXMsIGtleSkgJiYKICAgICAgICAgICAgICAgIHByb3BlcnRpZXNba2V5XQogICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgb2JqTmFtZSA9IHByb3BlcnRpZXNba2V5XTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKCFvYmpOYW1lKSB7CiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCJwcm9wZXJ0aWVz6Iez5bCR6ZyA6KaB5b2V5YWl5LiA5p2h5YaF5a65Iik7CiAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIGlmICghKGQucHJvcGVydGllc3x8e30pLm5hbWUpIHsKICAgICAgICAgICAgLy8gICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+W9leWFpXByb3BlcnRpZXPkuK1uYW1l55qE5YC8JykKICAgICAgICAgICAgLy8gICByZXR1cm4KICAgICAgICAgICAgLy8gfQogICAgICAgICAgICBsZXQgaW5kZXg7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5ub2Rlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGNvbnN0IGl0ID0gdGhpcy5ub2Rlc1tpXTsKICAgICAgICAgICAgICAvLyBpZiAoIWQuaWQgJiYgdGhpcy5ub2Rlc1tpXS50eXBlID09IGQudHlwZSkgewogICAgICAgICAgICAgIC8vICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfoioLngrnlkI3lt7LlrZjlnKgnKQogICAgICAgICAgICAgIC8vICAgcmV0dXJuCiAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgIGlmIChpdC5pZCA9PSBkLmlkKSB7CiAgICAgICAgICAgICAgICBpbmRleCA9IGk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChpdC50eXBlID09IHRoaXMudGFnZm9ybS50eXBlKSB7CiAgICAgICAgICAgICAgICAgIGl0LnN0eWxlID0geyBmaWxsOiBkLmZpbGwsIHN0cm9rZTogZC5zdHJva2UgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgbm9kZXMgPSB7CiAgICAgICAgICAgICAgaWQ6IGQuaWQgfHwgaWQrKyArICIiLAogICAgICAgICAgICAgIG5hbWU6IG9iak5hbWUsCiAgICAgICAgICAgICAgc3R5bGU6IHsgZmlsbDogZC5maWxsLCBzdHJva2U6IGQuc3Ryb2tlIH0sCiAgICAgICAgICAgICAgdHlwZTogZC50eXBlLAogICAgICAgICAgICAgIHNpemU6ICIyMCIsCiAgICAgICAgICAgICAgcHJvcGVydGllczogZC5wcm9wZXJ0aWVzLAogICAgICAgICAgICB9OwogICAgICAgICAgICBpZiAoaW5kZXggIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgdGhpcy5ub2Rlc1tpbmRleF0gPSBub2RlczsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLm5vZGVzLnB1c2gobm9kZXMpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVEMygpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBzZXRDb2xvcigpIHsKICAgICAgaWYodGhpcy50YWdmb3JtLnR5cGUpIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGNvbnN0IGl0ID0gdGhpcy5ub2Rlc1tpXTsKICAgICAgICAgIGlmKGl0LnR5cGUgPT0gdGhpcy50YWdmb3JtLnR5cGUpIHsKICAgICAgICAgICAgdGhpcy50YWdmb3JtLmZpbGwgPSBpdC5zdHlsZS5maWxsCiAgICAgICAgICAgIHRoaXMudGFnZm9ybS5zdHJva2UgPSBpdC5zdHlsZS5zdHJva2UKICAgICAgICAgICAgYnJlYWsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBvcGVuMigpIHsKICAgICAgdGhpcy50ZW1wTGlua3MgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMubGlua3MpKTsKICAgICAgdGhpcy52aXNpYmxlMiA9IHRydWU7CiAgICB9LAogICAgY2xvc2UyKCkgewogICAgICB0aGlzLnZpc2libGUyID0gZmFsc2U7CiAgICB9LAogICAgb2syKCkgewogICAgICBsZXQgbGlua3MgPSBbXTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnRlbXBMaW5rcy5sZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IGl0ID0gdGhpcy50ZW1wTGlua3NbaV07CiAgICAgICAgaWYgKCFpdC50YXJnZXQgfHwgIWl0LnNvdXJjZSB8fCAhaXQudHlwZSkgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCLor7fooaXlhajkv6Hmga/vvIEiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgaWYgKC9eXGQrLy50ZXN0KGl0LnR5cGUpKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuWFs+ezu+aPj+i/sOS4jeiDveS7peaVsOWtl+S4uuW8gOWktCIpOwogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIGlmICghaXQuY29sb3IpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygi6K+36YCJ5oup6aKc6Imy77yBIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGlmIChpdC5zb3VyY2UgPT0gaXQudGFyZ2V0KSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoInNvdXJjZeWSjHRhcmdldOS4jeiDveS4uuWQjOS4gOS4quiKgueCue+8gSIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZiAoCiAgICAgICAgICBsaW5rcy5pbmNsdWRlcyhpdC5zb3VyY2UgKyBpdC50YXJnZXQpCiAgICAgICAgICAvLyB8fCBsaW5rcy5pbmNsdWRlcyhpdC50YXJnZXQgKyBpdC5zb3VyY2UpCiAgICAgICAgKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuaciemHjeWkjeeahOi/nue6v++8gSIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBsaW5rcy5wdXNoKGl0LnNvdXJjZSArIGl0LnRhcmdldCk7CiAgICAgICAgLy8gbGlua3MucHVzaChpdC50YXJnZXQgKyBpdC5zb3VyY2UpOwogICAgICB9CiAgICAgIHRoaXMubGlua3MgPSB0aGlzLnRlbXBMaW5rczsKICAgICAgdGhpcy5jbG9zZTIoKTsKICAgICAgdGhpcy51cGRhdGVEMygpOwogICAgfSwKICAgIHVwZGF0ZUQzKCkgewogICAgICB0aGlzLmQudXBkYXRlKHsKICAgICAgICBub2RlczogSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm5vZGVzKSksCiAgICAgICAgbGlua3M6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5saW5rcykpLAogICAgICB9KTsKICAgIH0sCiAgICBhZGRMaW5rKCkgewogICAgICB0aGlzLnRlbXBMaW5rcy5wdXNoKHsKICAgICAgICBpZDogaWQrKyArICIiLAogICAgICAgIHNvdXJjZTogIiIsCiAgICAgICAgc2l6ZTogIjEiLAogICAgICAgIGNvbG9yOiAiIzU0NTQ1NCIsCiAgICAgICAgdHlwZTogIiIsCiAgICAgICAgdGFyZ2V0OiAiIiwKICAgICAgfSk7CiAgICB9LAogICAgZGVsTGluayhpKSB7CiAgICAgIHRoaXMudGVtcExpbmtzLnNwbGljZShpLCAxKTsKICAgIH0sCiAgICAvLyDliJ3lp4vljJZEMwogICAgc3RhcnREMyhub2RlcywgbGlua3MpIHsKICAgICAgdGhpcy5kID0gRHJhd0ZvcmNlLmluaXQoInN2ZyIsIHsKICAgICAgICB3aWR0aDogd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGgsCiAgICAgICAgaGVpZ2h0OiB3aW5kb3cuZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQsCiAgICAgICAgbm9kZXMsCiAgICAgICAgbGlua3MsCiAgICAgICAgc3ZnQ2xpY2s6IHRoaXMuc3ZnQ2xpY2ssCiAgICAgICAgdGV4dENsaWNrOiB0aGlzLm9wZW4yLAogICAgICB9KTsKICAgIH0sCiAgICByZXNldCgpIHsKICAgICAgdGhpcy4kcmVmcy5zdmdEaXYuaW5uZXJIVE1MID0gIiI7CiAgICB9LAogICAgb3BlbjMoKSB7CiAgICAgIGlmICh0aGlzLm5vZGVzICYmIHRoaXMubm9kZXMubGVuZ3RoID4gMSkgewogICAgICAgIGxldCBpZHMgPSB0aGlzLm5vZGVzLm1hcCgodikgPT4gdi5pZCk7CgogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saW5rcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgY29uc3QgaXQgPSB0aGlzLmxpbmtzW2ldOwogICAgICAgICAgbGV0IGlkaTEgPSBpZHMuaW5kZXhPZihpdC50YXJnZXQpOwogICAgICAgICAgaWYgKGlkaTEgPiAtMSkgewogICAgICAgICAgICBpZHMuc3BsaWNlKGlkaTEsIDEpOwogICAgICAgICAgfQogICAgICAgICAgbGV0IGlkaTIgPSBpZHMuaW5kZXhPZihpdC5zb3VyY2UpOwogICAgICAgICAgaWYgKGlkaTIgPiAtMSkgewogICAgICAgICAgICBpZHMuc3BsaWNlKGlkaTIsIDEpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoaWRzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygi5omA5pyJ6IqC54K56YO96ZyA6KaB5re75Yqg6L+e5o6l77yM6K+35qOA5p+l77yBIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIHRoaXMuJHByb21wdCgi6K+36L6T5YWl5qih5p2/5ZCNIiwgIuaPkOekuiIsIHsKICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwKICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICLlj5bmtogiLAogICAgICAgICAgaW5wdXRQYXR0ZXJuOiAvLnswLDUwfT8vLAogICAgICAgICAgaW5wdXRFcnJvck1lc3NhZ2U6ICLmqKHmnb/lkI3moLzlvI/kuI3mraPnoa4iLAogICAgICAgIH0pCiAgICAgICAgICAudGhlbigoeyB2YWx1ZSB9KSA9PiB7CiAgICAgICAgICAgIGxldCBkYXRhID0gewogICAgICAgICAgICAgIG1vZGVsbmFtZTogdmFsdWUsCiAgICAgICAgICAgICAgbm9kZXM6IHRoaXMubm9kZXMsCiAgICAgICAgICAgICAgZWRnZXM6IHRoaXMubGlua3MsCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgLmdldCgKICAgICAgICAgICAgICAgICIvc2F2ZU1vZGVsP21vZGVsU3RyaW5nPSIgKwogICAgICAgICAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoZGF0YSkpCiAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLkv53lrZjmiJDlip8iKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgLy8g6LCD5o6l5Y+jCiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKCgpID0+IHt9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuiHs+WwkemcgOimgeS4pOS4quiKgueCue+8gSIpOwogICAgICB9CiAgICB9LAogICAgd2luZG93UmVzaXplKCkgewogICAgICBpZiAodGltZXIpIGNsZWFyVGltZW91dCh0aW1lcik7CiAgICAgIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICAgIHRpbWVyID0gdW5kZWZpbmVkOwogICAgICAgIHRoaXMuc3RhcnREMyh0aGlzLm5vZGVzLCB0aGlzLmxpbmtzKTsKICAgICAgfSwgMzAwKTsKICAgIH0sCiAgICAvLyDngrnlh7tzdmfml7bnmoTlpITnkIYKICAgIHN2Z0NsaWNrKGRhdGEpIHsKICAgICAgaWYgKGRhdGEpIHsKICAgICAgICB0aGlzLm9wZW4xKGRhdGEpOwogICAgICB9CiAgICAgIHRoaXMuZC5oaWdobGlnaHRPYmplY3QoKTsKICAgICAgdGhpcy5zdmdGb2N1cyA9IGZhbHNlOwogICAgfSwKICAgIHNldERhdGEoKSB7CiAgICAgIHRoaXMubm9kZXMgPSBbXTsKICAgICAgdGhpcy5saW5rcyA9IFtdOwogICAgICB0aGlzLnN0YXJ0RDModGhpcy5ub2RlcywgdGhpcy5saW5rcyk7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuc2V0RGF0YSgpOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMud2luZG93UmVzaXplKTsKICB9LAogIGRlc3Ryb3llZCgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLndpbmRvd1Jlc2l6ZSk7CiAgfSwKfTsK"},{"version":3,"sources":["AddTemplate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddTemplate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"tags\">\n      <div\n        style=\"\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          width: 100%;\n        \"\n      >\n        <div style=\"flex: 1\">\n          <el-button\n            type=\"primary\"\n            class=\"button-new-tag\"\n            size=\"small\"\n            @click=\"open1()\"\n            >新建节点</el-button\n          >\n          <el-button\n            type=\"primary\"\n            class=\"button-new-tag\"\n            size=\"small\"\n            style=\"margin-right: 20px\"\n            @click=\"open2()\"\n            >新建连线</el-button\n          >\n          <el-tag\n            v-for=\"(it, i) in tags\"\n            :key=\"i\"\n            type=\"info\"\n            size=\"mini\"\n            effect=\"dark\"\n            style=\"margin-left: 10px; cursor: pointer\"\n            :color=\"it.style.fill\"\n            >{{ it.type }}</el-tag\n          >\n        </div>\n        <div>\n          <el-button\n            type=\"success\"\n            class=\"button-new-tag\"\n            size=\"small\"\n            @click=\"open3()\"\n            >保存模板</el-button\n          >\n        </div>\n      </div>\n    </div>\n    <div ref=\"svgDiv\" id=\"svg\" :class=\"svgFocus ? 'cfocus' : ''\"></div>\n\n    <el-dialog\n      class=\"dialog-index\"\n      :visible=\"visible\"\n      title=\"节点信息\"\n      :close-on-click-modal=\"false\"\n      @close=\"close\"\n      destroy-on-close\n      width=\"500px\"\n    >\n      <el-form\n        label-width=\"100px\"\n        ref=\"tagform\"\n        :model=\"tagform\"\n        :rules=\"tagRules\"\n        size=\"mini\"\n      >\n        <el-form-item label=\"节点名\" prop=\"type\">\n          <el-input\n            maxlength=\"50\"\n            v-model=\"tagform.type\"\n            placeholder=\"请输入节点名\"\n            @blur=\"setColor\"\n          ></el-input>\n        </el-form-item>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"properties\" prop=\"properties\">\n              <input-prop\n                ref=\"inputProp\"\n                :showPropList=\"false\"\n                v-model=\"tagform.properties\"\n              />\n              <!-- <el-select\n                style=\"width: 100%\"\n                v-model=\"tagform.properties\"\n                multiple\n                filterable\n                allow-create\n                default-first-option=\"\"\n                no-data-text=\"录入属性名，按回车键填充\"\n                placeholder=\"请录入节点属性\"\n              ></el-select> -->\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"填充颜色\" prop=\"fill\">\n              <el-color-picker\n                :predefine=\"predefineColors\"\n                style=\"width: 100%\"\n                v-model=\"tagform.fill\"\n              ></el-color-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"描边颜色\" prop=\"stroke\">\n              <el-color-picker\n                style=\"width: 100%\"\n                v-model=\"tagform.stroke\"\n              ></el-color-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"close()\">取 消</el-button>\n        <el-button v-if=\"tagform.id\" size=\"small\" @click=\"delNode()\"\n          >删 除</el-button\n        >\n        <el-button size=\"small\" type=\"primary\" @click=\"ok()\">保 存</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      class=\"dialog-index\"\n      :visible=\"visible2\"\n      title=\"连线信息\"\n      :close-on-click-modal=\"false\"\n      @close=\"close2\"\n      destroy-on-close\n      width=\"500px\"\n    >\n      <div>\n        <el-row v-for=\"(v, i) in tempLinks\" :key=\"i\" :gutter=\"8\">\n          <el-col :span=\"7\">\n            <el-select v-model=\"v.source\" size=\"mini\" placeholder=\"source\">\n              <el-option\n                v-for=\"(v, i) in nodes\"\n                :key=\"i\"\n                :label=\"v.name\"\n                :value=\"v.id\"\n              ></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-input\n              maxlength=\"50\"\n              v-model=\"v.type\"\n              size=\"mini\"\n              placeholder=\"关系描述\"\n            ></el-input>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-select v-model=\"v.target\" size=\"mini\" placeholder=\"target\">\n              <el-option\n                v-for=\"(v, i) in nodes\"\n                :key=\"i\"\n                :label=\"v.name\"\n                :value=\"v.id\"\n              ></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"2\">\n            <el-color-picker\n              size=\"mini\"\n              style=\"width: 100%\"\n              v-model=\"v.color\"\n            ></el-color-picker>\n          </el-col>\n          <el-col :span=\"2\">\n            <el-button size=\"mini\" type=\"text\" @click=\"delLink(i)\"\n              >删除</el-button\n            >\n          </el-col>\n        </el-row>\n        <div>\n          <el-button type=\"text\" size=\"small\" @click=\"addLink\"\n            >新增连线</el-button\n          >\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"close2()\">取 消</el-button>\n        <el-button size=\"small\" type=\"primary\" @click=\"ok2()\">保 存</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport DrawForce from \"@/plugins/drawForce\";\nimport axios from \"axios\";\nimport InputProp from \"./InputProp\";\n\nlet timer;\nlet id = 1;\nlet colori = 0;\nexport default {\n  name: \"AddTemplate\",\n  inject: [\"reload\"],\n  components: { InputProp },\n  data() {\n    return {\n      visible: false,\n      visible2: false,\n      nodes: [],\n      links: [],\n      tempLinks: [],\n      predefineColors: [\n        \"#ffcf3c\",\n        \"#c990c0\",\n        \"#f79767\",\n        \"#57c7e3\",\n        \"#f16667\",\n        \"#d9c8ae\",\n        \"#8dcc93\",\n        \"#ecb5c9\",\n        \"#4c8eda\",\n        \"#ffc454\",\n        \"#da7194\",\n        \"#569480\",\n      ],\n      tagform: {\n        id: null,\n        properties: {},\n        size: \"\",\n        fill: \"\",\n        stroke: \"\",\n        type: \"\",\n      },\n      tagRules: {\n        type: [{ required: true, message: \"请输入节点名\", trigger: \"blur\" }],\n        fill: [\n          { required: true, message: \"请选择一个填充颜色\", trigger: \"change\" },\n        ],\n        stroke: [\n          { required: true, message: \"请选择一个描边颜色\", trigger: \"change\" },\n        ],\n      },\n      svgFocus: false,\n      d: null,\n    };\n  },\n  computed: {\n    tags () {\n      let arr = []\n      let typeArr = []\n      if (this.nodes) {\n        for (let i = 0; i < this.nodes.length; i++) {\n          const it = this.nodes[i];\n          if (!typeArr.includes(it.type)) {\n            arr.push(it)\n            typeArr.push(it.type)\n          }\n        }\n      }\n      return arr\n    }\n  },\n  methods: {\n    getPredefineColors() {\n      return this.predefineColors[colori++]\n    },\n    open1(row) {\n      row = row || {};\n      this.tagform = {\n        id: row.id || null,\n        name: row.name || \"\",\n        properties: row.properties || { name: \"\" },\n        size: row.size || \"\",\n        fill: (row.style || {}).fill || this.getPredefineColors(),\n        stroke: (row.style || {}).stroke || \"#FFFFFF\",\n        type: row.type || \"\",\n      };\n      if (colori >= this.predefineColors.length) colori = 0;\n      this.visible = true;\n    },\n    close() {\n      this.visible = false;\n    },\n    delNode() {\n      let d = this.tagform;\n      this.$confirm(\"确定删除节点\" + d.name + \"和相关连线的吗？\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          this.nodes = this.nodes.filter((v) => v.id != d.id);\n          this.links = this.links.filter((v) => {\n            return v.target != d.id && v.source != d.id;\n          });\n          this.close();\n          this.updateD3();\n        })\n        .catch(() => {});\n    },\n    ok() {\n      this.$refs.tagform.validate((valid) => {\n        if (valid) {\n          let d = this.tagform;\n          if (/^\\d+/.test(d.type)) {\n            this.$message.warning(\"节点名不能以数字为开头\");\n            return;\n          }\n          if (this.$refs.inputProp.emitInput()) {\n            return;\n          }\n          this.$nextTick(() => {\n            let objName = \"\"; // 圆圈上显示的内容\n            let properties = d.properties || {};\n            for (const key in properties) {\n              if (\n                Object.hasOwnProperty.call(properties, key) &&\n                properties[key]\n              ) {\n                objName = properties[key];\n              }\n            }\n            if (!objName) {\n              this.$message.warning(\"properties至少需要录入一条内容\");\n              return;\n            }\n            // if (!(d.properties||{}).name) {\n            //   this.$message.warning('请录入properties中name的值')\n            //   return\n            // }\n            let index;\n            for (let i = 0; i < this.nodes.length; i++) {\n              const it = this.nodes[i];\n              // if (!d.id && this.nodes[i].type == d.type) {\n              //   this.$message.warning('节点名已存在')\n              //   return\n              // }\n              if (it.id == d.id) {\n                index = i;\n              }\n              if (it.type == this.tagform.type) {\n                  it.style = { fill: d.fill, stroke: d.stroke }\n              }\n            }\n            let nodes = {\n              id: d.id || id++ + \"\",\n              name: objName,\n              style: { fill: d.fill, stroke: d.stroke },\n              type: d.type,\n              size: \"20\",\n              properties: d.properties,\n            };\n            if (index != undefined) {\n              this.nodes[index] = nodes;\n            } else {\n              this.nodes.push(nodes);\n            }\n            this.close();\n            this.updateD3();\n          });\n        }\n      });\n    },\n    setColor() {\n      if(this.tagform.type) {\n        for (let i = 0; i < this.nodes.length; i++) {\n          const it = this.nodes[i];\n          if(it.type == this.tagform.type) {\n            this.tagform.fill = it.style.fill\n            this.tagform.stroke = it.style.stroke\n            break\n          }\n        }\n      }\n    },\n    open2() {\n      this.tempLinks = JSON.parse(JSON.stringify(this.links));\n      this.visible2 = true;\n    },\n    close2() {\n      this.visible2 = false;\n    },\n    ok2() {\n      let links = [];\n      for (let i = 0; i < this.tempLinks.length; i++) {\n        const it = this.tempLinks[i];\n        if (!it.target || !it.source || !it.type) {\n          this.$message.warning(\"请补全信息！\");\n          return;\n        }\n        if (/^\\d+/.test(it.type)) {\n          this.$message.warning(\"关系描述不能以数字为开头\");\n          return true;\n        }\n        if (!it.color) {\n          this.$message.warning(\"请选择颜色！\");\n          return;\n        }\n        if (it.source == it.target) {\n          this.$message.warning(\"source和target不能为同一个节点！\");\n          return;\n        }\n        if (\n          links.includes(it.source + it.target)\n          // || links.includes(it.target + it.source)\n        ) {\n          this.$message.warning(\"有重复的连线！\");\n          return;\n        }\n        links.push(it.source + it.target);\n        // links.push(it.target + it.source);\n      }\n      this.links = this.tempLinks;\n      this.close2();\n      this.updateD3();\n    },\n    updateD3() {\n      this.d.update({\n        nodes: JSON.parse(JSON.stringify(this.nodes)),\n        links: JSON.parse(JSON.stringify(this.links)),\n      });\n    },\n    addLink() {\n      this.tempLinks.push({\n        id: id++ + \"\",\n        source: \"\",\n        size: \"1\",\n        color: \"#545454\",\n        type: \"\",\n        target: \"\",\n      });\n    },\n    delLink(i) {\n      this.tempLinks.splice(i, 1);\n    },\n    // 初始化D3\n    startD3(nodes, links) {\n      this.d = DrawForce.init(\"svg\", {\n        width: window.document.body.offsetWidth,\n        height: window.document.body.offsetHeight,\n        nodes,\n        links,\n        svgClick: this.svgClick,\n        textClick: this.open2,\n      });\n    },\n    reset() {\n      this.$refs.svgDiv.innerHTML = \"\";\n    },\n    open3() {\n      if (this.nodes && this.nodes.length > 1) {\n        let ids = this.nodes.map((v) => v.id);\n\n        for (let i = 0; i < this.links.length; i++) {\n          const it = this.links[i];\n          let idi1 = ids.indexOf(it.target);\n          if (idi1 > -1) {\n            ids.splice(idi1, 1);\n          }\n          let idi2 = ids.indexOf(it.source);\n          if (idi2 > -1) {\n            ids.splice(idi2, 1);\n          }\n        }\n        if (ids.length > 0) {\n          this.$message.warning(\"所有节点都需要添加连接，请检查！\");\n          return;\n        }\n        this.$prompt(\"请输入模板名\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          inputPattern: /.{0,50}?/,\n          inputErrorMessage: \"模板名格式不正确\",\n        })\n          .then(({ value }) => {\n            let data = {\n              modelname: value,\n              nodes: this.nodes,\n              edges: this.links,\n            };\n            axios\n              .get(\n                \"/saveModel?modelString=\" +\n                  encodeURIComponent(JSON.stringify(data))\n              )\n              .then(function (response) {\n                this.$message.success(\"保存成功\");\n                console.log(response);\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            // 调接口\n          })\n          .catch(() => {});\n      } else {\n        this.$message.warning(\"至少需要两个节点！\");\n      }\n    },\n    windowResize() {\n      if (timer) clearTimeout(timer);\n      timer = setTimeout(() => {\n        this.reset();\n        timer = undefined;\n        this.startD3(this.nodes, this.links);\n      }, 300);\n    },\n    // 点击svg时的处理\n    svgClick(data) {\n      if (data) {\n        this.open1(data);\n      }\n      this.d.highlightObject();\n      this.svgFocus = false;\n    },\n    setData() {\n      this.nodes = [];\n      this.links = [];\n      this.startD3(this.nodes, this.links);\n    },\n  },\n  mounted() {\n    this.setData();\n    window.addEventListener(\"resize\", this.windowResize);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.windowResize);\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overflow-y: hidden;\n  background-color: #2e2d2d;\n  color: #fff;\n}\n#svg {\n  height: 100%;\n  width: 100%;\n}\n.tags {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  min-height: 20px;\n  border-bottom: 1px solid #555;\n  background-color: #ffffff0f;\n  display: flex;\n  justify-content: space-between;\n}\n\n.button-new-tag {\n  margin-left: 10px;\n  height: 20px;\n  padding: 0 5px;\n  line-height: 19px;\n}\n</style>\n"]}]}