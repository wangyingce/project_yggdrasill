{"remainingRequest":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eruda/Documents/GitHub/project_yggdrasill/ui/src/components/IndexPage.vue?vue&type=style&index=0&id=37c61601&scoped=true&lang=css&","dependencies":[{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/src/components/IndexPage.vue","mtime":1614925256000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbnRlbnQgew0KICBoZWlnaHQ6IDEwMCU7DQogIHdpZHRoOiAxMDAlOw0KICBtYXJnaW46IDA7DQogIHBhZGRpbmc6IDA7DQogIG92ZXJmbG93LXk6IGhpZGRlbjsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzJlMmQyZDsNCiAgY29sb3I6ICNmZmY7DQp9DQoucGR0b3AxNSB7DQogIHBhZGRpbmctdG9wOiAxNXB4Ow0KfQ0KLnRpdGxlMSB7DQogIGZvbnQtc2l6ZTogMThweDsNCiAgY29sb3I6ICNiN2IzYjM7DQogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNzc3Ow0KICBwYWRkaW5nLWJvdHRvbTogOHB4Ow0KfQ0KI3N2ZyB7DQogIGhlaWdodDogMTAwJTsNCiAgd2lkdGg6IDEwMCU7DQp9DQoubGVmdC1jb250ZW50IHsNCiAgcG9zaXRpb246IGZpeGVkOw0KICB0b3A6IDA7DQogIGxlZnQ6IDA7DQogIGJvdHRvbTogMDsNCiAgd2lkdGg6IDMwMHB4Ow0KICBwYWRkaW5nOiAxMHB4Ow0KICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjNTU1Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmMGY7DQp9DQouaGVhZGVyIHsNCiAgZm9udC1zaXplOiAzMHB4Ow0KICBmb250LXdlaWdodDogYm9sZGVyOw0KfQ0KLmRhdGEtbGlzdC1yb3cgew0KICBwYWRkaW5nOiA0cHggOHB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDsNCn0NCi5kYXRhLWxpc3Qtcm93LmFjdGl2ZSB7DQogIGJhY2tncm91bmQtY29sb3I6ICM1ZDVkNWQ7DQogIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCi50YWdzIHsNCiAgcG9zaXRpb246IGZpeGVkOw0KICB0b3A6IDA7DQogIGxlZnQ6IDMyMHB4Ow0KICByaWdodDogMDsNCiAgcGFkZGluZzogMTBweDsNCiAgbWluLWhlaWdodDogMjBweDsNCiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1NTU7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYwZjsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KfQ0KDQo="},{"version":3,"sources":["IndexPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IndexPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"tags\">\r\n      <div style=\"display: flex;align-items: center;\">\r\n        <el-tag v-for=\"(it, i) in tags\" :key=\"i\"\r\n          type=\"info\" size=\"mini\" effect=\"dark\" style=\"margin-left:10px;cursor:pointer\"\r\n          @click=\"tagClick(it)\"\r\n          :color=\"it[0].style.fill\" >{{i}}({{it.length}})</el-tag>\r\n      </div>\r\n    </div>\r\n    <div class=\"left-content\">\r\n      <div style=\"height: 100%;\">\r\n        <el-scrollbar style=\"height:100%\" wrap-style=\"overflow-x: hidden;\" view-style=\"overflow-x: hidden;\">\r\n          <div class=\"header\">知识图谱</div>\r\n          <div class=\"pdtop15\">\r\n            <el-input size=\"mini\" placeholder=\"搜索\" clearable v-model=\"input1\" @keyup.native.enter=\"search\">\r\n              <el-button slot=\"append\" type=\"primary\" size=\"mini\" @click=\"search\">搜索</el-button>\r\n            </el-input>\r\n          </div>\r\n          <div class=\"pdtop15\" v-show=\"dataList && dataList.length > 0\">\r\n            <div class=\"title1\">查询结果：</div>\r\n            <div style=\"height: 180px;\">\r\n                <el-scrollbar style=\"height:100%\" wrap-style=\"overflow-x: hidden;\" view-style=\"overflow-x: hidden;\">\r\n                  <div v-for=\"(it, i) in dataList\" :key=\"i\"\r\n                    :class=\"'data-list-row' + (activeI == i ? ' active' : '')\"\r\n                    @click=\"selectRow(i)\"\r\n                    >name: {{it.name}}</div>\r\n                </el-scrollbar>\r\n            </div>\r\n          </div>\r\n          <div class=\"pdtop15\" v-show=\"tooltip\">\r\n            <div class=\"title1\">properties：</div>\r\n            <div v-for=\"(it, i) in (tooltip || {})\" :key=\"i\" style=\"padding-left: 8px;\">{{i}}：{{it}}</div>\r\n            <div class=\"pdtop15\">\r\n              <el-button size=\"mini\" @click=\"modify\">修改节点</el-button>\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n      </div>\r\n    </div>\r\n    <div ref=\"svgDiv\" id=\"svg\" :class=\"(svgFocus ? 'cfocus' : '')\"></div>\r\n    \r\n    <NodeDialog\r\n      v-if=\"dialogVisible\"\r\n      :title=\"title\"\r\n      :formData=\"formData\"\r\n      :propertiesList=\"propertiesList\"\r\n      :disabled=\"false\"\r\n      @close=\"nodeDialogClose\" @ok=\"nodeDialogOk\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DrawForce from \"@/plugins/drawForce\"\r\nimport axios from 'axios'\r\nimport NodeDialog from './NodeDialog'\r\n\r\nlet timer\r\nexport default {\r\n  name: \"IndexPage\",\r\n  components: {NodeDialog},\r\n  inject: ['reload'],\r\n  data() {\r\n    return {\r\n      nodes: [],\r\n      links: [],\r\n      tags: {},\r\n      propertiesList: [\r\n        {key: 'name', label:['name']},\r\n        {key: 'identNum', label:['身份证']},\r\n        {key: 'policyNum', label:['保单', '保单号']},\r\n        {key: 'stard', label:['起期', '保险起期']},\r\n        {key: 'endd', label:['止期', '保险止期']},\r\n        {key: 'accd', label:['出险', '出险时间']},\r\n        {key: 'payNum', label:['银行卡']},\r\n        {key: 'reportD', label:['报案', '报案时间']},\r\n        {key: 'reportNum', label:['报案电话']}\r\n      ],\r\n      input1: '',\r\n      dataList: [],\r\n      nodeData: null,\r\n      tooltip: null,\r\n      activeI: '',\r\n      svgFocus: false,\r\n      dialogVisible: false,\r\n      title: '',\r\n      d: null\r\n    }\r\n  },\r\n  methods: {\r\n    nodeDialogClose() {\r\n      this.dialogVisible = false\r\n    },\r\n    nodeDialogOk() {\r\n      this.nodeDialogClose()\r\n    },\r\n    modify() {\r\n      this.formData = this.nodeData || {}\r\n      this.title = \"修改节点\"\r\n      this.dialogVisible = true\r\n    },\r\n    // 点击标签时的处理\r\n    tagClick(it) {\r\n      this.svgFocus = true\r\n      this.selectRow('null')\r\n      this.removeTagHighlight()\r\n      let arr2 = document.getElementsByClassName(\"i\"+it[0].id)\r\n      for (let i = arr2.length - 1; i > -1; i--) {\r\n        arr2[i].classList.add('tagHighlight')\r\n      }\r\n    },\r\n    // 清空高亮的块\r\n    removeTagHighlight() {\r\n      let arr = document.getElementsByClassName('tagHighlight')\r\n      for (let i = arr.length - 1; i > -1; i--) {\r\n        arr[i].classList.remove('tagHighlight')\r\n      }\r\n    },\r\n    // 按name搜索\r\n    search() {\r\n      if(!this.d)return\r\n      if(!this.input1) {\r\n        this.dataList = []\r\n        this.selectRow('null')\r\n        return\r\n      }\r\n      this.dataList = this.d.search(this.input1, ['name']) // 查询name相同的数据\r\n      this.selectRow(this.dataList.length ? 0 : 'null')\r\n    },\r\n    // 选中一行\r\n    selectRow(i) {\r\n      let d = this.d\r\n      let dataList = this.dataList\r\n      this.activeI = null\r\n      d.highlightObject()\r\n      if (dataList && dataList[i]) {\r\n        d.highlightObject(dataList[i])\r\n        d.nodeData = dataList[i]\r\n        this.drawTooltip(d.nodeData, 'selectRow')\r\n        this.activeI = i\r\n      }\r\n    },\r\n    // 更新Tooltip信息\r\n    drawTooltip(data) {\r\n      this.nodeData = data\r\n      if (data && data.properties && Object.keys(data.properties).length > 0) {\r\n        this.tooltip = data.properties\r\n      } else {\r\n        this.tooltip = null\r\n      }\r\n    },\r\n    // 点击svg时的处理\r\n    svgClick(data) {\r\n      this.d.highlightObject()\r\n      this.drawTooltip(data)\r\n      this.svgFocus = false\r\n      this.selectRow(\"null\")\r\n    },\r\n    // 初始化D3\r\n    startD3(nodes, links ) { // tags\r\n      this.d = DrawForce.init('svg', {\r\n        width: window.document.body.offsetWidth,\r\n        height: window.document.body.offsetHeight,\r\n        nodes, links,\r\n        svgClick: this.svgClick\r\n      })\r\n    },\r\n    reset() {\r\n      this.dataList = []\r\n      this.tooltip = null\r\n      this.$refs.svgDiv.innerHTML = ''\r\n    },\r\n    windowResize() {\r\n      if(timer)clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        this.reset()\r\n        timer=undefined\r\n        this.startD3(this.nodes, this.links, this.tags)\r\n      }, 300)\r\n    },\r\n    initData() {\r\n       let vm = this\r\n      axios.get('/visionAllData' + location.search)\r\n      .then(function (response) {\r\n        if(response.status != 200 || response.data.error) {\r\n          alert(response.data.error || response.statusText)\r\n          return\r\n        }\r\n        let json = response.data\r\n        vm.setData(json)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      });\r\n    },\r\n    setData(data){\r\n      let vm = this\r\n      let nodes = data.nodes || []\r\n      let links = data.edges || []\r\n      let tags = {}\r\n      nodes.forEach((element) => {\r\n        if (element.type) {\r\n          tags[element.type] = tags[element.type] || []\r\n          tags[element.type].push(element)\r\n          element.typeKey = tags[element.type][0].id // 取第一个id当相同的key\r\n        }\r\n      });\r\n      vm.nodes = nodes\r\n      vm.links = links\r\n      vm.tags = tags\r\n      vm.startD3(nodes, links, tags)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n    window.addEventListener('resize', this.windowResize)\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('resize', this.windowResize)\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow-y: hidden;\r\n  background-color: #2e2d2d;\r\n  color: #fff;\r\n}\r\n.pdtop15 {\r\n  padding-top: 15px;\r\n}\r\n.title1 {\r\n  font-size: 18px;\r\n  color: #b7b3b3;\r\n  border-top: 1px solid #777;\r\n  padding-bottom: 8px;\r\n}\r\n#svg {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.left-content {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border-right: 1px solid #555;\r\n  background-color: #ffffff0f;\r\n}\r\n.header {\r\n  font-size: 30px;\r\n  font-weight: bolder;\r\n}\r\n.data-list-row {\r\n  padding: 4px 8px;\r\n  cursor: pointer;\r\n  word-break: break-all;\r\n}\r\n.data-list-row.active {\r\n  background-color: #5d5d5d;\r\n  border-radius: 4px;\r\n}\r\n.tags {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 320px;\r\n  right: 0;\r\n  padding: 10px;\r\n  min-height: 20px;\r\n  border-bottom: 1px solid #555;\r\n  background-color: #ffffff0f;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n</style>\r\n"]}]}