{"remainingRequest":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/babel-loader/lib/index.js!/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eruda/Documents/GitHub/project_yggdrasill/ui/src/components/AddTemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/src/components/AddTemplate.vue","mtime":1620638042000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eruda/Documents/GitHub/project_yggdrasill/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddTemplate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"tags\">\n      <div\n        style=\"\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          width: 100%;\n        \"\n      >\n        <div style=\"flex: 1\">\n          <el-button\n            type=\"primary\"\n            class=\"button-new-tag\"\n            size=\"small\"\n            @click=\"open1()\"\n            >新建节点</el-button\n          >\n          <el-button\n            type=\"primary\"\n            class=\"button-new-tag\"\n            size=\"small\"\n            style=\"margin-right: 20px\"\n            @click=\"open2()\"\n            >新建连线</el-button\n          >\n          <el-tag\n            v-for=\"(it, i) in tags\"\n            :key=\"i\"\n            type=\"info\"\n            size=\"mini\"\n            effect=\"dark\"\n            style=\"margin-left: 10px; cursor: pointer\"\n            :color=\"it.style.fill\"\n            >{{ it.type }}</el-tag\n          >\n        </div>\n        <div>\n          <el-button\n            type=\"success\"\n            class=\"button-new-tag\"\n            size=\"small\"\n            @click=\"open3()\"\n            >保存模板</el-button\n          >\n        </div>\n      </div>\n    </div>\n    <div ref=\"svgDiv\" id=\"svg\" :class=\"svgFocus ? 'cfocus' : ''\"></div>\n\n    <el-dialog\n      class=\"dialog-index\"\n      :visible=\"visible\"\n      title=\"节点信息\"\n      :close-on-click-modal=\"false\"\n      @close=\"close\"\n      destroy-on-close\n      width=\"500px\"\n    >\n      <el-form\n        label-width=\"100px\"\n        ref=\"tagform\"\n        :model=\"tagform\"\n        :rules=\"tagRules\"\n        size=\"mini\"\n      >\n        <el-form-item label=\"节点名\" prop=\"type\">\n          <el-input\n            maxlength=\"50\"\n            v-model=\"tagform.type\"\n            placeholder=\"请输入节点名\"\n            @blur=\"setColor\"\n          ></el-input>\n        </el-form-item>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"properties\" prop=\"properties\">\n              <input-prop\n                ref=\"inputProp\"\n                :showPropList=\"false\"\n                v-model=\"tagform.properties\"\n              />\n              <!-- <el-select\n                style=\"width: 100%\"\n                v-model=\"tagform.properties\"\n                multiple\n                filterable\n                allow-create\n                default-first-option=\"\"\n                no-data-text=\"录入属性名，按回车键填充\"\n                placeholder=\"请录入节点属性\"\n              ></el-select> -->\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"填充颜色\" prop=\"fill\">\n              <el-color-picker\n                :predefine=\"predefineColors\"\n                style=\"width: 100%\"\n                v-model=\"tagform.fill\"\n              ></el-color-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"描边颜色\" prop=\"stroke\">\n              <el-color-picker\n                style=\"width: 100%\"\n                v-model=\"tagform.stroke\"\n              ></el-color-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"close()\">取 消</el-button>\n        <el-button v-if=\"tagform.id\" size=\"small\" @click=\"delNode()\"\n          >删 除</el-button\n        >\n        <el-button size=\"small\" type=\"primary\" @click=\"ok()\">保 存</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      class=\"dialog-index\"\n      :visible=\"visible2\"\n      title=\"连线信息\"\n      :close-on-click-modal=\"false\"\n      @close=\"close2\"\n      destroy-on-close\n      width=\"500px\"\n    >\n      <div>\n        <el-row v-for=\"(v, i) in tempLinks\" :key=\"i\" :gutter=\"8\">\n          <el-col :span=\"7\">\n            <el-select v-model=\"v.source\" size=\"mini\" placeholder=\"source\">\n              <el-option\n                v-for=\"(v, i) in nodes\"\n                :key=\"i\"\n                :label=\"v.name\"\n                :value=\"v.id\"\n              ></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-input\n              maxlength=\"50\"\n              v-model=\"v.type\"\n              size=\"mini\"\n              placeholder=\"关系描述\"\n            ></el-input>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-select v-model=\"v.target\" size=\"mini\" placeholder=\"target\">\n              <el-option\n                v-for=\"(v, i) in nodes\"\n                :key=\"i\"\n                :label=\"v.name\"\n                :value=\"v.id\"\n              ></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"2\">\n            <el-color-picker\n              size=\"mini\"\n              style=\"width: 100%\"\n              v-model=\"v.color\"\n            ></el-color-picker>\n          </el-col>\n          <el-col :span=\"2\">\n            <el-button size=\"mini\" type=\"text\" @click=\"delLink(i)\"\n              >删除</el-button\n            >\n          </el-col>\n        </el-row>\n        <div>\n          <el-button type=\"text\" size=\"small\" @click=\"addLink\"\n            >新增连线</el-button\n          >\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"close2()\">取 消</el-button>\n        <el-button size=\"small\" type=\"primary\" @click=\"ok2()\">保 存</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport DrawForce from \"@/plugins/drawForce\";\nimport axios from \"axios\";\nimport InputProp from \"./InputProp\";\n\nlet timer;\nlet id = 1;\nlet colori = 0;\nexport default {\n  name: \"AddTemplate\",\n  inject: [\"reload\"],\n  components: { InputProp },\n  data() {\n    return {\n      visible: false,\n      visible2: false,\n      nodes: [],\n      links: [],\n      tempLinks: [],\n      predefineColors: [\n        \"#ffcf3c\",\n        \"#c990c0\",\n        \"#f79767\",\n        \"#57c7e3\",\n        \"#f16667\",\n        \"#d9c8ae\",\n        \"#8dcc93\",\n        \"#ecb5c9\",\n        \"#4c8eda\",\n        \"#ffc454\",\n        \"#da7194\",\n        \"#569480\",\n      ],\n      tagform: {\n        id: null,\n        properties: {},\n        size: \"\",\n        fill: \"\",\n        stroke: \"\",\n        type: \"\",\n      },\n      tagRules: {\n        type: [{ required: true, message: \"请输入节点名\", trigger: \"blur\" }],\n        fill: [\n          { required: true, message: \"请选择一个填充颜色\", trigger: \"change\" },\n        ],\n        stroke: [\n          { required: true, message: \"请选择一个描边颜色\", trigger: \"change\" },\n        ],\n      },\n      svgFocus: false,\n      d: null,\n    };\n  },\n  computed: {\n    tags () {\n      let arr = []\n      let typeArr = []\n      if (this.nodes) {\n        for (let i = 0; i < this.nodes.length; i++) {\n          const it = this.nodes[i];\n          if (!typeArr.includes(it.type)) {\n            arr.push(it)\n            typeArr.push(it.type)\n          }\n        }\n      }\n      return arr\n    }\n  },\n  methods: {\n    getPredefineColors() {\n      return this.predefineColors[colori++]\n    },\n    open1(row) {\n      row = row || {};\n      this.tagform = {\n        id: row.id || null,\n        name: row.name || \"\",\n        properties: row.properties || { name: \"\" },\n        size: row.size || \"\",\n        fill: (row.style || {}).fill || this.getPredefineColors(),\n        stroke: (row.style || {}).stroke || \"#FFFFFF\",\n        type: row.type || \"\",\n      };\n      if (colori >= this.predefineColors.length) colori = 0;\n      this.visible = true;\n    },\n    close() {\n      this.visible = false;\n    },\n    delNode() {\n      let d = this.tagform;\n      this.$confirm(\"确定删除节点\" + d.name + \"和相关连线的吗？\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          this.nodes = this.nodes.filter((v) => v.id != d.id);\n          this.links = this.links.filter((v) => {\n            return v.target != d.id && v.source != d.id;\n          });\n          this.close();\n          this.updateD3();\n        })\n        .catch(() => {});\n    },\n    ok() {\n      this.$refs.tagform.validate((valid) => {\n        if (valid) {\n          let d = this.tagform;\n          if (/^\\d+/.test(d.type)) {\n            this.$message.warning(\"节点名不能以数字为开头\");\n            return;\n          }\n          if (this.$refs.inputProp.emitInput()) {\n            return;\n          }\n          this.$nextTick(() => {\n            let objName = \"\"; // 圆圈上显示的内容\n            let properties = d.properties || {};\n            for (const key in properties) {\n              if (\n                Object.hasOwnProperty.call(properties, key) &&\n                properties[key]\n              ) {\n                objName = properties[key];\n              }\n            }\n            if (!objName) {\n              this.$message.warning(\"properties至少需要录入一条内容\");\n              return;\n            }\n            // if (!(d.properties||{}).name) {\n            //   this.$message.warning('请录入properties中name的值')\n            //   return\n            // }\n            let index;\n            for (let i = 0; i < this.nodes.length; i++) {\n              const it = this.nodes[i];\n              // if (!d.id && this.nodes[i].type == d.type) {\n              //   this.$message.warning('节点名已存在')\n              //   return\n              // }\n              if (it.id == d.id) {\n                index = i;\n              }\n              if (it.type == this.tagform.type) {\n                  it.style = { fill: d.fill, stroke: d.stroke }\n              }\n            }\n            let nodes = {\n              id: d.id || id++ + \"\",\n              name: objName,\n              style: { fill: d.fill, stroke: d.stroke },\n              type: d.type,\n              size: \"20\",\n              properties: d.properties,\n            };\n            if (index != undefined) {\n              this.nodes[index] = nodes;\n            } else {\n              this.nodes.push(nodes);\n            }\n            this.close();\n            this.updateD3();\n          });\n        }\n      });\n    },\n    setColor() {\n      if(this.tagform.type) {\n        for (let i = 0; i < this.nodes.length; i++) {\n          const it = this.nodes[i];\n          if(it.type == this.tagform.type) {\n            this.tagform.fill = it.style.fill\n            this.tagform.stroke = it.style.stroke\n            break\n          }\n        }\n      }\n    },\n    open2() {\n      this.tempLinks = JSON.parse(JSON.stringify(this.links));\n      this.visible2 = true;\n    },\n    close2() {\n      this.visible2 = false;\n    },\n    ok2() {\n      let links = [];\n      for (let i = 0; i < this.tempLinks.length; i++) {\n        const it = this.tempLinks[i];\n        if (!it.target || !it.source || !it.type) {\n          this.$message.warning(\"请补全信息！\");\n          return;\n        }\n        if (/^\\d+/.test(it.type)) {\n          this.$message.warning(\"关系描述不能以数字为开头\");\n          return true;\n        }\n        if (!it.color) {\n          this.$message.warning(\"请选择颜色！\");\n          return;\n        }\n        if (it.source == it.target) {\n          this.$message.warning(\"source和target不能为同一个节点！\");\n          return;\n        }\n        if (\n          links.includes(it.source + it.target)\n          // || links.includes(it.target + it.source)\n        ) {\n          this.$message.warning(\"有重复的连线！\");\n          return;\n        }\n        links.push(it.source + it.target);\n        // links.push(it.target + it.source);\n      }\n      this.links = this.tempLinks;\n      this.close2();\n      this.updateD3();\n    },\n    updateD3() {\n      this.d.update({\n        nodes: JSON.parse(JSON.stringify(this.nodes)),\n        links: JSON.parse(JSON.stringify(this.links)),\n      });\n    },\n    addLink() {\n      this.tempLinks.push({\n        id: id++ + \"\",\n        source: \"\",\n        size: \"1\",\n        color: \"#545454\",\n        type: \"\",\n        target: \"\",\n      });\n    },\n    delLink(i) {\n      this.tempLinks.splice(i, 1);\n    },\n    // 初始化D3\n    startD3(nodes, links) {\n      this.d = DrawForce.init(\"svg\", {\n        width: window.document.body.offsetWidth,\n        height: window.document.body.offsetHeight,\n        nodes,\n        links,\n        svgClick: this.svgClick,\n        textClick: this.open2,\n      });\n    },\n    reset() {\n      this.$refs.svgDiv.innerHTML = \"\";\n    },\n    open3() {\n      if (this.nodes && this.nodes.length > 1) {\n        let ids = this.nodes.map((v) => v.id);\n\n        for (let i = 0; i < this.links.length; i++) {\n          const it = this.links[i];\n          let idi1 = ids.indexOf(it.target);\n          if (idi1 > -1) {\n            ids.splice(idi1, 1);\n          }\n          let idi2 = ids.indexOf(it.source);\n          if (idi2 > -1) {\n            ids.splice(idi2, 1);\n          }\n        }\n        if (ids.length > 0) {\n          this.$message.warning(\"所有节点都需要添加连接，请检查！\");\n          return;\n        }\n        this.$prompt(\"请输入模板名\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          inputPattern: /.{0,50}?/,\n          inputErrorMessage: \"模板名格式不正确\",\n        })\n          .then(({ value }) => {\n            let data = {\n              modelname: value,\n              nodes: this.nodes,\n              edges: this.links,\n            };\n            axios\n              .get(\n                \"/saveModel?modelString=\" +\n                  encodeURIComponent(JSON.stringify(data))\n              )\n              .then(function (response) {\n                this.$message.success(\"保存成功\");\n                console.log(response);\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            // 调接口\n          })\n          .catch(() => {});\n      } else {\n        this.$message.warning(\"至少需要两个节点！\");\n      }\n    },\n    windowResize() {\n      if (timer) clearTimeout(timer);\n      timer = setTimeout(() => {\n        this.reset();\n        timer = undefined;\n        this.startD3(this.nodes, this.links);\n      }, 300);\n    },\n    // 点击svg时的处理\n    svgClick(data) {\n      if (data) {\n        this.open1(data);\n      }\n      this.d.highlightObject();\n      this.svgFocus = false;\n    },\n    setData() {\n      this.nodes = [];\n      this.links = [];\n      this.startD3(this.nodes, this.links);\n    },\n  },\n  mounted() {\n    this.setData();\n    window.addEventListener(\"resize\", this.windowResize);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.windowResize);\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overflow-y: hidden;\n  background-color: #2e2d2d;\n  color: #fff;\n}\n#svg {\n  height: 100%;\n  width: 100%;\n}\n.tags {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  min-height: 20px;\n  border-bottom: 1px solid #555;\n  background-color: #ffffff0f;\n  display: flex;\n  justify-content: space-between;\n}\n\n.button-new-tag {\n  margin-left: 10px;\n  height: 20px;\n  padding: 0 5px;\n  line-height: 19px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}